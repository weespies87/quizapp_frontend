/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as QuestionsImport } from './routes/questions'
import { Route as PlayersScreenImport } from './routes/playersScreen'
import { Route as JoinImport } from './routes/join'
import { Route as CreateRoomImport } from './routes/createRoom'
import { Route as IndexImport } from './routes/index'
import { Route as PlayersRoomIdImport } from './routes/players.$roomId'
import { Route as HostRoomIdImport } from './routes/host.$roomId'

// Create/Update Routes

const QuestionsRoute = QuestionsImport.update({
  id: '/questions',
  path: '/questions',
  getParentRoute: () => rootRoute,
} as any)

const PlayersScreenRoute = PlayersScreenImport.update({
  id: '/playersScreen',
  path: '/playersScreen',
  getParentRoute: () => rootRoute,
} as any)

const JoinRoute = JoinImport.update({
  id: '/join',
  path: '/join',
  getParentRoute: () => rootRoute,
} as any)

const CreateRoomRoute = CreateRoomImport.update({
  id: '/createRoom',
  path: '/createRoom',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PlayersRoomIdRoute = PlayersRoomIdImport.update({
  id: '/players/$roomId',
  path: '/players/$roomId',
  getParentRoute: () => rootRoute,
} as any)

const HostRoomIdRoute = HostRoomIdImport.update({
  id: '/host/$roomId',
  path: '/host/$roomId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/createRoom': {
      id: '/createRoom'
      path: '/createRoom'
      fullPath: '/createRoom'
      preLoaderRoute: typeof CreateRoomImport
      parentRoute: typeof rootRoute
    }
    '/join': {
      id: '/join'
      path: '/join'
      fullPath: '/join'
      preLoaderRoute: typeof JoinImport
      parentRoute: typeof rootRoute
    }
    '/playersScreen': {
      id: '/playersScreen'
      path: '/playersScreen'
      fullPath: '/playersScreen'
      preLoaderRoute: typeof PlayersScreenImport
      parentRoute: typeof rootRoute
    }
    '/questions': {
      id: '/questions'
      path: '/questions'
      fullPath: '/questions'
      preLoaderRoute: typeof QuestionsImport
      parentRoute: typeof rootRoute
    }
    '/host/$roomId': {
      id: '/host/$roomId'
      path: '/host/$roomId'
      fullPath: '/host/$roomId'
      preLoaderRoute: typeof HostRoomIdImport
      parentRoute: typeof rootRoute
    }
    '/players/$roomId': {
      id: '/players/$roomId'
      path: '/players/$roomId'
      fullPath: '/players/$roomId'
      preLoaderRoute: typeof PlayersRoomIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/createRoom': typeof CreateRoomRoute
  '/join': typeof JoinRoute
  '/playersScreen': typeof PlayersScreenRoute
  '/questions': typeof QuestionsRoute
  '/host/$roomId': typeof HostRoomIdRoute
  '/players/$roomId': typeof PlayersRoomIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/createRoom': typeof CreateRoomRoute
  '/join': typeof JoinRoute
  '/playersScreen': typeof PlayersScreenRoute
  '/questions': typeof QuestionsRoute
  '/host/$roomId': typeof HostRoomIdRoute
  '/players/$roomId': typeof PlayersRoomIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/createRoom': typeof CreateRoomRoute
  '/join': typeof JoinRoute
  '/playersScreen': typeof PlayersScreenRoute
  '/questions': typeof QuestionsRoute
  '/host/$roomId': typeof HostRoomIdRoute
  '/players/$roomId': typeof PlayersRoomIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/createRoom'
    | '/join'
    | '/playersScreen'
    | '/questions'
    | '/host/$roomId'
    | '/players/$roomId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/createRoom'
    | '/join'
    | '/playersScreen'
    | '/questions'
    | '/host/$roomId'
    | '/players/$roomId'
  id:
    | '__root__'
    | '/'
    | '/createRoom'
    | '/join'
    | '/playersScreen'
    | '/questions'
    | '/host/$roomId'
    | '/players/$roomId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateRoomRoute: typeof CreateRoomRoute
  JoinRoute: typeof JoinRoute
  PlayersScreenRoute: typeof PlayersScreenRoute
  QuestionsRoute: typeof QuestionsRoute
  HostRoomIdRoute: typeof HostRoomIdRoute
  PlayersRoomIdRoute: typeof PlayersRoomIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateRoomRoute: CreateRoomRoute,
  JoinRoute: JoinRoute,
  PlayersScreenRoute: PlayersScreenRoute,
  QuestionsRoute: QuestionsRoute,
  HostRoomIdRoute: HostRoomIdRoute,
  PlayersRoomIdRoute: PlayersRoomIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/createRoom",
        "/join",
        "/playersScreen",
        "/questions",
        "/host/$roomId",
        "/players/$roomId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/createRoom": {
      "filePath": "createRoom.tsx"
    },
    "/join": {
      "filePath": "join.tsx"
    },
    "/playersScreen": {
      "filePath": "playersScreen.tsx"
    },
    "/questions": {
      "filePath": "questions.tsx"
    },
    "/host/$roomId": {
      "filePath": "host.$roomId.tsx"
    },
    "/players/$roomId": {
      "filePath": "players.$roomId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
