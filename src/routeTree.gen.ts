/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PlayersRoomIdImport } from './routes/players.$roomId'
import { Route as HostRoomIdImport } from './routes/host.$roomId'
import { Route as GameRoomIdImport } from './routes/game.$roomId'
import { Route as GameHostRoomIdImport } from './routes/game.host.$roomId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PlayersRoomIdRoute = PlayersRoomIdImport.update({
  id: '/players/$roomId',
  path: '/players/$roomId',
  getParentRoute: () => rootRoute,
} as any)

const HostRoomIdRoute = HostRoomIdImport.update({
  id: '/host/$roomId',
  path: '/host/$roomId',
  getParentRoute: () => rootRoute,
} as any)

const GameRoomIdRoute = GameRoomIdImport.update({
  id: '/game/$roomId',
  path: '/game/$roomId',
  getParentRoute: () => rootRoute,
} as any)

const GameHostRoomIdRoute = GameHostRoomIdImport.update({
  id: '/game/host/$roomId',
  path: '/game/host/$roomId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/game/$roomId': {
      id: '/game/$roomId'
      path: '/game/$roomId'
      fullPath: '/game/$roomId'
      preLoaderRoute: typeof GameRoomIdImport
      parentRoute: typeof rootRoute
    }
    '/host/$roomId': {
      id: '/host/$roomId'
      path: '/host/$roomId'
      fullPath: '/host/$roomId'
      preLoaderRoute: typeof HostRoomIdImport
      parentRoute: typeof rootRoute
    }
    '/players/$roomId': {
      id: '/players/$roomId'
      path: '/players/$roomId'
      fullPath: '/players/$roomId'
      preLoaderRoute: typeof PlayersRoomIdImport
      parentRoute: typeof rootRoute
    }
    '/game/host/$roomId': {
      id: '/game/host/$roomId'
      path: '/game/host/$roomId'
      fullPath: '/game/host/$roomId'
      preLoaderRoute: typeof GameHostRoomIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/game/$roomId': typeof GameRoomIdRoute
  '/host/$roomId': typeof HostRoomIdRoute
  '/players/$roomId': typeof PlayersRoomIdRoute
  '/game/host/$roomId': typeof GameHostRoomIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/game/$roomId': typeof GameRoomIdRoute
  '/host/$roomId': typeof HostRoomIdRoute
  '/players/$roomId': typeof PlayersRoomIdRoute
  '/game/host/$roomId': typeof GameHostRoomIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/game/$roomId': typeof GameRoomIdRoute
  '/host/$roomId': typeof HostRoomIdRoute
  '/players/$roomId': typeof PlayersRoomIdRoute
  '/game/host/$roomId': typeof GameHostRoomIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/game/$roomId'
    | '/host/$roomId'
    | '/players/$roomId'
    | '/game/host/$roomId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/game/$roomId'
    | '/host/$roomId'
    | '/players/$roomId'
    | '/game/host/$roomId'
  id:
    | '__root__'
    | '/'
    | '/game/$roomId'
    | '/host/$roomId'
    | '/players/$roomId'
    | '/game/host/$roomId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GameRoomIdRoute: typeof GameRoomIdRoute
  HostRoomIdRoute: typeof HostRoomIdRoute
  PlayersRoomIdRoute: typeof PlayersRoomIdRoute
  GameHostRoomIdRoute: typeof GameHostRoomIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GameRoomIdRoute: GameRoomIdRoute,
  HostRoomIdRoute: HostRoomIdRoute,
  PlayersRoomIdRoute: PlayersRoomIdRoute,
  GameHostRoomIdRoute: GameHostRoomIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/game/$roomId",
        "/host/$roomId",
        "/players/$roomId",
        "/game/host/$roomId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/game/$roomId": {
      "filePath": "game.$roomId.tsx"
    },
    "/host/$roomId": {
      "filePath": "host.$roomId.tsx"
    },
    "/players/$roomId": {
      "filePath": "players.$roomId.tsx"
    },
    "/game/host/$roomId": {
      "filePath": "game.host.$roomId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
